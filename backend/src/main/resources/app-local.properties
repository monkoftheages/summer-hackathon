## This is an example of an app-properties file.
# app properties
app.authBypassed=false
# use the port that user service is running on in your local machine, eg 5001
app.userAddress=https://user.fff-dev.com
app.orderAddress=https://order.fff-dev.com
app.maxThreadCount = 10
app.inventoryHoldbackPercentage=0.5

#app.userAddress=https://user.fff-qa.com
app.v1BackendKey=fabfitfun20twenty
# dummy JWT. When decoded: {"clientId": "sample_client"}
app.v1BackendJwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbGllbnRJZCI6InNhbXBsZV9jbGllbnQifQ.9R8nqY0jKRjzCeLfoH7gBbZGB9UdlG6earWrJnpOBXw
app.janus.baseUrl=https://janus.fff-dev.com
#app.janus.baseUrl=https://janus.fff-qa.com
app.janus.apiKey=customize_api_client
app.janus.apiSecret=password


# dev redis
app.redisStore.host=elc-dev-customize-api-nuc-0001-001.tkiarq.0001.usw2.cache.amazonaws.com
app.redisStore.clusterMode=true
app.redisStorePredictions.host=elc-dev-predictions-na.tkiarq.clustercfg.usw2.cache.amazonaws.com

pushReadDatabase.url=jdbc:mysql://rds-dev-shop-cluster.cluster-c1yqzlng7npm.us-west-2.rds.amazonaws.com/ebdb?useSSL=false
pushReadDatabase.user=dev
pushReadDatabase.password=Q5JsZQM&rjc4v7

shopReadDatabase.url=jdbc:mysql://rds-dev-shop-cluster.cluster-c1yqzlng7npm.us-west-2.rds.amazonaws.com/ssoblog?zeroDateTimeBehavior=convertToNull&useSSL=false
shopReadDatabase.user=dev
shopReadDatabase.password=Q5JsZQM&rjc4v7

customizeWriteDatabase.url=jdbc:mysql://rds-dev-shop-cluster.cluster-c1yqzlng7npm.us-west-2.rds.amazonaws.com/customize?useSSL=false
customizeWriteDatabase.user=masterusr28
customizeWriteDatabase.password=x~BjCuwg!&!63J&:)DR<f7WZ,Kbw%NUD

customizeReadDatabase.url=jdbc:mysql://rds-dev-shop-cluster.cluster-c1yqzlng7npm.us-west-2.rds.amazonaws.com/customize?useSSL=false
customizeReadDatabase.user=masterusr28
customizeReadDatabase.password=x~BjCuwg!&!63J&:)DR<f7WZ,Kbw%NUD


# http app and admin ports
server.applicationConnectors[0].port=80
server.adminConnectors[0].port=6000
# This makes logs easier to read. Commenting out the appenders section in the app.yml file makes it
# even easier to read.
#logging.appenders[0].layout.prettyPrint=true
logging.loggers.com.fabfitfun=INFO
launchDarkly.redisHost=elc-dev-ld-na.tkiarq.ng.0001.usw2.cache.amazonaws.com
launchDarkly.sdkKey=sdk-b70d71bb-6fad-4905-8e4e-d132d1993641
customizeLaunchDarkly.redisHost=elc-dev-ld-na.tkiarq.ng.0001.usw2.cache.amazonaws.com
customizeLaunchDarkly.sdkKey=sdk-b4e73ed5-fda8-456b-8492-7e0ba85defe8

kafka.brokers=localhost:9092
kafka.schemaRegistryHost=http://localhost:8081
kafka.configuration.acks=all

kafka.predictionBrokers=b-2.msk-dev-order-assignme.nek835.c7.kafka.us-west-2.amazonaws.com:9096,b-3.msk-dev-order-assignme.nek835.c7.kafka.us-west-2.amazonaws.com:9096,b-1.msk-dev-order-assignme.nek835.c7.kafka.us-west-2.amazonaws.com:9096
kafka.predictionSchemaRegistryHost=https://pal-kafka-schema-registry.fff-dev.com
kafka.predictionUsername=order-assignment-sa-dev
kafka.predictionPassword=8ajZJ75x7CvRKWfMbzGReGrdD3
